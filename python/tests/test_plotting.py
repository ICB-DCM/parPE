import pytest
import numpy as np
import sys
import os
import matplotlib.pyplot as plt

sys.path.append(os.getcwd())
import parpe


def test_plotCostTrajectory():
    trajectory = np.array([[1973.04936847, 1984.18715128, 1418.52489179,
                            1400.43017898, 1397.12533452, 1385.08421621,
                            1344.30598578,
                            1264.60606752, 1122.48010475, 411.03442073,
                            131.54312271,
                            40.18631427, -45.40256667, -54.61810958,
                            -162.03138665,
                            -201.60193383, -288.72144814, -324.17783114,
                            -354.01920918,
                            -359.49309832, -361.87400754, -362.14258051,
                            -362.57011229,
                            -362.68420947, -362.8505377, -362.98118704,
                            -363.05785476,
                            -363.14547166, -363.37454306, -363.68825667,
                            -364.88409351,
                            -365.53263739, -365.98350239, -365.99564213,
                            -366.35376724,
                            -366.82826313, -367.24278473, -367.33123181,
                            -367.35029827,
                            -367.37309776, -367.39623605, -367.40824072,
                            -367.41370685,
                            -367.4148553, -367.41764766, -367.41833489,
                            -367.42042694,
                            -367.4239782, -367.42585982, -367.42726942,
                            -367.42864683,
                            -367.43500723, -367.44081204, -367.44123729,
                            -367.44154479,
                            -367.44167096, -367.44189454, -367.44231804,
                            -367.44275442,
                            -367.44280811, -367.44342899, -367.44343312,
                            -367.4434371,
                            -367.44343835, -367.44343862, -367.44343966,
                            -367.44344269,
                            -367.44344273, -367.44344276, -367.44344279,
                            -367.4434428,
                            -367.44344286, -367.44344291, -367.44344294,
                            -367.44344302,
                            -367.44344302, -367.44344302]])

    parpe.plotting.plotCostTrajectory(trajectory.T, log=False)

    plt.savefig('test_plotCostTrajectory.png')


def test_plotCorrelation():
    ysim = np.array(
        [[0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064476, 0.10133352, 0.10275676, 0.1056935, 0.11173509,
          0.12408603, 0.14899632, 0.19775834, 0.2868151, 0.42404373,
          0.5621451, 0.60672163, 0.58345102, 0.54703454, 0.49836256],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064475, 0.10133348, 0.10275659, 0.10569277, 0.11173199,
          0.12407294, 0.1489419, 0.19753938, 0.28599742, 0.42146743,
          0.55645099, 0.59909215, 0.57521035, 0.53748525, 0.48788569],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064474, 0.10133344, 0.10275642, 0.10569204, 0.1117289,
          0.12405987, 0.14888759, 0.19732131, 0.28518635, 0.41893175,
          0.55092105, 0.59183297, 0.56753745, 0.5287742, 0.4785714],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064473, 0.1013334, 0.10275625, 0.10569131, 0.1117258,
          0.12404681, 0.14883338, 0.19710411, 0.28438186, 0.41643603,
          0.54554984, 0.58492156, 0.56037903, 0.52079972, 0.47024256]])

    ymes = np.array(
        [[0.0774601, 0.14642428, 0.12606023, -0.03097806, 0.14825162,
          0.22877599, 0.12775007, 0.24447126, -0.02828035, 0.22646585,
          0.04862696, 0.12246367, 0.13999253, 0.35976035, 0.58473499,
          0.54135779, 0.57197519, 0.57508695, 0.71141394, 0.70841507],
         [0.00429935, 0.12647722, 0.10452356, 0.24990579, -0.05729926,
          0.17787815, 0.14178156, 0.13167377, 0.19602098, -0.13258808,
          0.02464096, 0.25964132, 0.15340662, 0.27235346, 0.4167105,
          0.4065546, 0.49290219, 0.64599422, 0.39149911, 0.53645499],
         [0.16207181, 0.04764787, 0.1743527, 0.19171212, 0.23210091,
          0.12622293, 0.26587835, 0.06984834, 0.17338802, 0.08190206,
          0.08990532, 0.03117389, 0.08847997, 0.23732376, 0.40086242,
          0.37341688, 0.51060457, 0.5074502, 0.5069499, 0.31147836],
         [0.10479706, 0.0394897, 0.2810147, 0.03121223, 0.17083319,
          0.23290454, 0.12476066, 0.20397891, 0.08100514, 0.24470329,
          0.06497109, 0.09075236, 0.18346634, 0.28092907, 0.36639342,
          0.61384642, 0.42186903, 0.74920793, 0.53454494, 0.58519592]])

    parpe.plotting.plotCorrelation(ymes, ysim)

    plt.savefig('test_plotCorrelation.png')


def test_plotCorrelationDensity():
    ysim = np.array(
        [[0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064476, 0.10133352, 0.10275676, 0.1056935, 0.11173509,
          0.12408603, 0.14899632, 0.19775834, 0.2868151, 0.42404373,
          0.5621451, 0.60672163, 0.58345102, 0.54703454, 0.49836256],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064475, 0.10133348, 0.10275659, 0.10569277, 0.11173199,
          0.12407294, 0.1489419, 0.19753938, 0.28599742, 0.42146743,
          0.55645099, 0.59909215, 0.57521035, 0.53748525, 0.48788569],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064474, 0.10133344, 0.10275642, 0.10569204, 0.1117289,
          0.12405987, 0.14888759, 0.19732131, 0.28518635, 0.41893175,
          0.55092105, 0.59183297, 0.56753745, 0.5287742, 0.4785714],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064473, 0.1013334, 0.10275625, 0.10569131, 0.1117258,
          0.12404681, 0.14883338, 0.19710411, 0.28438186, 0.41643603,
          0.54554984, 0.58492156, 0.56037903, 0.52079972, 0.47024256]])

    ymes = np.array(
        [[0.0774601, 0.14642428, 0.12606023, -0.03097806, 0.14825162,
          0.22877599, 0.12775007, 0.24447126, -0.02828035, 0.22646585,
          0.04862696, 0.12246367, 0.13999253, 0.35976035, 0.58473499,
          0.54135779, 0.57197519, 0.57508695, 0.71141394, 0.70841507],
         [0.00429935, 0.12647722, 0.10452356, 0.24990579, -0.05729926,
          0.17787815, 0.14178156, 0.13167377, 0.19602098, -0.13258808,
          0.02464096, 0.25964132, 0.15340662, 0.27235346, 0.4167105,
          0.4065546, 0.49290219, 0.64599422, 0.39149911, 0.53645499],
         [0.16207181, 0.04764787, 0.1743527, 0.19171212, 0.23210091,
          0.12622293, 0.26587835, 0.06984834, 0.17338802, 0.08190206,
          0.08990532, 0.03117389, 0.08847997, 0.23732376, 0.40086242,
          0.37341688, 0.51060457, 0.5074502, 0.5069499, 0.31147836],
         [0.10479706, 0.0394897, 0.2810147, 0.03121223, 0.17083319,
          0.23290454, 0.12476066, 0.20397891, 0.08100514, 0.24470329,
          0.06497109, 0.09075236, 0.18346634, 0.28092907, 0.36639342,
          0.61384642, 0.42186903, 0.74920793, 0.53454494, 0.58519592]])

    parpe.plotting.plotCorrelationDensity(ymes, ysim)

    plt.savefig('test_plotCorrelationDensity.png')


def test_plotTrajectoryFit():
    ysim = np.array(
        [[0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064476, 0.10133352, 0.10275676, 0.1056935, 0.11173509,
          0.12408603, 0.14899632, 0.19775834, 0.2868151, 0.42404373,
          0.5621451, 0.60672163, 0.58345102, 0.54703454, 0.49836256],
         [0.40001104, 0.40002285, 0.40004728, 0.40009781, 0.40020235,
          0.40041854, 0.40086535, 0.40178767, 0.40368673, 0.40757645,
          0.41545784, 0.43107565, 0.46064835, 0.5117601, 0.58582598,
          0.66297818, 0.69755976, 0.65999763, 0.57307726, 0.46326115],
         [0.69998019, 0.69995901, 0.69991518, 0.69982452, 0.69963695,
          0.69924902, 0.69844707, 0.69679084, 0.69337724, 0.68637085,
          0.67211414, 0.64362016, 0.58875457, 0.49099975, 0.34278948,
          0.1810404, 0.08591544, 0.06149794, 0.04935214, 0.03598085],
         [0.19846265, 0.19849873, 0.19857338, 0.19872783, 0.19904735,
          0.1997083, 0.20107499, 0.20389911, 0.20972645, 0.22171472,
          0.24622255, 0.29565177, 0.3924097, 0.56912406, 0.84142533,
          1.11545836, 1.20391109, 1.15773547, 1.08547465, 0.98889537],
         [3.43227905, 3.43229086, 3.43231529, 3.43236582, 3.43247036,
          3.43268655, 3.43313336, 3.43405568, 3.43595474, 3.43984446,
          3.44772585, 3.46334366, 3.49291636, 3.54402811, 3.61809399,
          3.69524619, 3.72982777, 3.69226564, 3.60534527, 3.49552916],
         [0.10001701, 0.10003519, 0.10007281, 0.10015064, 0.10031167,
          0.10064476, 0.10133352, 0.10275676, 0.1056935, 0.11173509,
          0.12408603, 0.14899632, 0.19775834, 0.2868151, 0.42404373,
          0.5621451, 0.60672163, 0.58345102, 0.54703454, 0.49836256]])

    ymes = np.array(
        [[0.0774601, 0.14642428, 0.12606023, -0.03097806, 0.14825162,
          0.22877599, 0.12775007, 0.24447126, -0.02828035, 0.22646585,
          0.04862696, 0.12246367, 0.13999253, 0.35976035, 0.58473499,
          0.54135779, 0.57197519, 0.57508695, 0.71141394, 0.70841507],
         [0.45973404, 0.3658479, 0.41760445, 0.59821599, 0.47148726,
          0.4878992, 0.43702001, 0.39219596, 0.43656835, 0.56001317,
          0.48135235, 0.44604461, 0.5278431, 0.76971042, 0.62627638,
          0.75836543, 0.52862807, 0.77460115, 0.56816169, 0.4565491],
         [0.81255315, 0.77880272, 0.66786799, 0.7233087, 0.62213138,
          0.46498697, 0.69560931, 0.77797703, 0.94731295, 0.67267311,
          0.68213205, 0.9930619, 0.57460811, 0.37074382, 0.34322567,
          0.27718595, 0.11011432, -0.02530401, 0.19626747, 0.161018],
         [0.20759768, 0.06025904, 0.1275741, 0.26339634, 0.29703593,
          0.28435492, 0.16062884, 0.14644532, 0.23499847, 0.31210696,
          0.1501826, 0.17816085, 0.40824013, 0.72614008, 0.82315055,
          1.16017481, 1.17431701, 1.12127508, 1.28980633, 0.6998918],
         [3.36650192, 3.61221896, 3.41132757, 3.42617184, 3.38344799,
          3.36141462, 3.35848328, 3.53233913, 3.40167918, 3.38497232,
          3.46108637, 3.57862378, 3.42334901, 3.47941723, 3.49455274,
          3.77577025, 3.76970022, 3.80767198, 3.49605037, 3.54873858],
         [0.47227768, 0.2836221, -0.08447987, -0.09795989, 0.42465191,
          -0.07877018, 0.3122268, 0.1642349, 0.05390236, 0.16725433,
          0.24983997, 0.1151742, 0.32863416, 0.21329379, 0.43457298,
          0.60542001, 0.46634942, 0.44798421, 0.51993627, 0.30947148]])

    timepoints = np.array(
        [1.00000000e-05, 2.06913808e-05, 4.28133240e-05, 8.85866790e-05,
         1.83298071e-04, 3.79269019e-04, 7.84759970e-04, 1.62377674e-03,
         3.35981829e-03, 6.95192796e-03, 1.43844989e-02, 2.97635144e-02,
         6.15848211e-02, 1.27427499e-01, 2.63665090e-01, 5.45559478e-01,
         1.12883789e+00, 2.33572147e+00, 4.83293024e+00, 1.00000000e+01])

    parpe.plotting.plotTrajectoryFit(ymes, ysim, timepoints)

    plt.savefig('test_plotTrajectoryFit.png')


def test_plotCorrelationBoxMulti():
    data = [
        np.array([[0.82920246, 0.39746685, 0.74725746, 0.28093198, -0.28831811,
                   0.7720585, 0.55574219, 0.53004205, 0.65693492],
                  [0.83304294, 0.52240431, 0.79276233, 0.31090874, -0.14555892,
                   0.64917323, 0.52001041, -0.03154688, 0.63295128],
                  [0.86177342, 0.60070139, 0.81096929, 0.33555504, -0.26784468,
                   0.67804742, 0.59625838, 0.81726019, 0.68827069],
                  [0.8072149, 0.49719794, 0.78618346, 0.27104882, -0.20138699,
                   0.61199544, 0.59496684, 0.7834118, 0.64402816],
                  [0.86811655, -0.040645, 0.79424214, 0.30630541, -0.22716555,
                   0.82724921, 0.65898424, 0.59218317, 0.59384596]]),
        np.array(
            [[-0.28033792, -0.38295328, -0.54498343, -0.35029823, -0.68622136,
              -0.19974439, -0.24650188, 0.82592009, -0.34067905],
             [0.05883987, -0.48993851, -0.33817109, -0.35029823, -0.68622137,
              0.1098369, -0.08446226, 0.82592009, 0.07704687],
             [-0.46253845, -0.22855354, -0.57916434, 0.35029823, 0.68622137,
              -0.37758841, -0.31039864, 0.82592009, -0.56601621],
             [0.40266177, 0.29164762, 0.57773426, 0.35029824, 0.68622136,
              0.31767236, 0.29235044, -0.82592009, 0.49184347],
             [0.48326853, 0.20219041, 0.57607342, -0.35029823, -0.68622137,
              0.39887025, 0.31556793, -0.82592009, 0.59173969]]),
        np.array([[0.31478692, 0.36109697, 0.55726761, 0.35029823, 0.68622137,
                   0.23249609, 0.260335, -0.82592009, 0.38321269],
                  [0.56447831, 0.0480907, 0.52363611, -0.35029823, -0.68622136,
                   0.48829348, 0.3236813, -0.82592009, 0.69300491],
                  [-0.08496704, -0.46578715, -0.44268648, -0.35029823,
                   -0.68622136,
                   -0.01889594, -0.15822993, 0.82592009, -0.09985731],
                  [-0.26239254, -0.39334652, -0.53779688, -0.35029823,
                   -0.68622137,
                   -0.18280134, -0.23905888, 0.82592009, -0.31853183],
                  [0.52305801, -0.29754973, 0.21374041, -0.35029823,
                   -0.68622138,
                   0.49320181, 0.21822867, -0.82592009, 0.64547805]]),
        np.array(
            [[-0.57692179, 0.17512874, -0.35720901, 0.35029823, 0.68622137,
              -0.52576453, -0.27725517, 0.82592009, -0.7104611],
             [0.4173941, 0.27759067, 0.57925022, 0.35029824, 0.68622136,
              0.33223969, 0.29714145, -0.82592009, 0.51007901],
             [-0.58665292, 0.07295156, -0.44665779, 0.35029823, 0.68622137,
              -0.52211385, -0.30703866, 0.82592009, -0.72142306],
             [-0.57385894, -0.01570077, -0.50600179, 0.35029823, 0.68622137,
              -0.50036018, -0.32113422, 0.82592009, -0.70484393],
             [-0.2447918, -0.40292601, -0.53026101, -0.35029824, -0.68622124,
              -0.16625681, -0.2316121, 0.82592009, -0.29681591]])]

    labels = ['Optimization 1', 'Optimization 2',
              'Optimization 3', 'Optimization 4']

    parpe.plotCorrelationBoxMulti(data, labels)

    plt.savefig('test_plotCorrelationBoxMulti.png')
