# https://github.com/marketplace/actions/publish-docker
name: Test
on: [push]
jobs:
  container:
    runs-on: ubuntu-latest
    container: dweindl/parpeci:latest
    name: Ship
    steps:

    - name: set paths
      run:
        - echo "::set-env name=PARPE_BASE::$(pwd)"
        - echo "::set-env name=AMICI_PATH::$PARPE_BASE/deps/AMICI/"

    - name: info
      run:
        - lsb_release -a
        - printenv

      # Build dependencies

    - name: Install AMICI deps
      run: |
        cd $AMICI_PATH \
          && scripts/buildSuiteSparse.sh \
          && scripts/buildSundials.sh \
          && scripts/buildCpputest.sh #&& scripts/buildAmici.sh
          &&
    - name: Install AMICI
      run: |
        mkdir -p ${AMICI_PATH}/build && cd ${AMICI_PATH}/build \
          && CPPUTEST_BUILD_DIR=${AMICI_PATH}/ThirdParty/cpputest-master/build/ \
          && cmake -DCMAKE_BUILD_TYPE=Debug \
            -DENABLE_PYTHON=ON -DBUILD_TESTS=OFF \
            -DCppUTest_DIR=${CPPUTEST_BUILD_DIR} .. && make -j12

      #- cd $PARPE_BASE/ThirdParty && ./installCeres.sh

    - name: Install google test
      run: cd $PARPE_BASE && ThirdParty/installGoogleTest.sh

    - name: build parPE
      run: |
        pip install -r $PARPE_BASE/python/requirements.txt \
        && cd $PARPE_BASE && ./buildShippable.sh

    - name: run tests
      run: cd $PARPE_BASE/build && CTEST_OUTPUT_ON_FAILURE=1 make test

    - name: valgrind
      run: CTEST_OUTPUT_ON_FAILURE=1 make ExperimentalMemCheck; cat Testing/Temporary/MemoryChecker.*.log

    - name: coverage report
      run: cd $PARPE_BASE/build && CTEST_OUTPUT_ON_FAILURE=1 make parpe_coverage_cobertura

    - run: mkdir -p $PARPE_BASE/shippable/codecoverage && cp $PARPE_BASE/build/parpe_coverage_cobertura.xml $PARPE_BASE/shippable/codecoverage

      # PEtab test suite
    - run: $PARPE_BASE/misc/run_in_venv.sh $PARPE_BASE/build/venv pip3 install pytest-xdist
    - run: cd $PARPE_BASE/ && git clone --depth 1 https://github.com/PEtab-dev/petab_test_suite.git && $PARPE_BASE/misc/run_in_venv.sh $PARPE_BASE/build/venv pip3 install -e petab_test_suite
    - run: $PARPE_BASE/misc/run_in_venv.sh $PARPE_BASE/build/venv pytest -v -n 2 $PARPE_BASE/tests/petab-test-suite

      # benchmark models
    - run: sudo apt install bc
    - run: cd $PARPE_BASE/benchmark_collection && git clone --depth 1 https://github.com/Benchmarking-Initiative/Benchmark-Models-PEtab.git
    - run: $PARPE_BASE/misc/run_in_venv.sh $PARPE_BASE/build/venv pip3 install shyaml
    - run: AMICI_PARALLEL_COMPILE=4 BENCHMARK_COLLECTION="$(pwd)/Benchmark-Models-PEtab/Benchmark-Models/" $PARPE_BASE/misc/run_in_venv.sh $PARPE_BASE/build/venv ./all.sh
